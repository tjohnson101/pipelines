on:
  push:

name: Deploy Environment

jobs:
  deploy:
    name: Deploy
    # uses hosted runner
    runs-on: self-hosted
    if: "!contains(github.event.commits[0].message, '[skip ci]')"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Deploy
        run: |
          # Deploy
          sh scripts/deploy.sh
        env:
          PING_IDENTITY_DEVOPS_USER_BASE64: ${{ secrets.PING_IDENTITY_DEVOPS_USER_BASE64 }}
          PING_IDENTITY_DEVOPS_KEY_BASE64: ${{ secrets.PING_IDENTITY_DEVOPS_KEY_BASE64 }}
      - name: Report Success
        env:
          SLACK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if test ${{ secrets.SLACK_WEBHOOK_URL }} != ""; then
            . "scripts/lib.sh"
            echo "Your environment is ready, check Slack!"
            tmpHosts="$(kubectl get ing -l app.kubernetes.io/instance="${REF}" '-o=jsonpath={.items[*].spec.rules[*].host}')"
            for i in $tmpHosts ; do INGRESS_HOSTS="$INGRESS_HOSTS $i \\n"; done
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment Successful - :rocket: Check out hosts:\n'"$INGRESS_HOSTS"'"}' "${SLACK_URL}"
          fi
      - name: Report Failure
        env:
          SLACK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: ${{ failure() }}
        run: |
          if test ${{ secrets.SLACK_WEBHOOK_URL }} != ""; then
            echo "Deployment Failed."
            curl -X POST -H 'Content-type: application/json' --data '{"text":"Failed Deployment - :sob: Check pipeline - '"${GITHUB_SERVER_URL}"'/'"${GITHUB_REPOSITORY}"'/actions/runs/'"$GITHUB_RUN_ID"'"}' "${SLACK_URL}"
          fi
